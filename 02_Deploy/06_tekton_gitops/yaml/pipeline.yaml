apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy-caj-fare
spec:
  params:
  - name: APP_NAME
    type: string
  - name: SOURCE_GIT_URL
    type: string
    description: The application git repository url
  - name: SOURCE_GIT_REVISION
    type: string
    description: The application git repository revision
  - name: DOCKERFILE
    type: string
  - name: IMAGE
    type: string
  - name: manifest-git-url
    type: string
    description: manifest git repo url
  - name: manifest-git-revision
    type: string
    description: manifest git revision
    default: main
  - name: manifest-path
    type: string
    description: the path to deployment

  workspaces:
  - name: app-source
  - name: images-url
  - name: app-manifest

  tasks:
  - name: git-clone
    taskRef:
      kind: ClusterTask
      name: git-clone
    params:
    - name: url
      value: $(params.SOURCE_GIT_URL)
    - name: revision
      value: $(params.SOURCE_GIT_REVISION)
    - name: deleteExisting
      value: 'true'
    workspaces:
    - name: output
      workspace: app-source

  - name: generate-tag
    taskRef:
      kind: Task
      name: generate-tag
  
  - name: gradle
    runAfter:
    - git-clone
    - generate-tag
    taskRef:
      name: gradle
    params:
    - name: TASKS
      value: ["build", "-x", "test"]
    workspaces:
    - name: source
      workspace: app-source

  - name: build-image
    runAfter:
    - gradle
    taskRef:
      name: buildah
      kind: ClusterTask
    params:
    - name: TLSVERIFY
      value: "false"
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/caj-fare:$(tasks.generate-tag.results.image-tag)
    - name: DOCKERFILE
      value: $(params.DOCKERFILE)
    workspaces:
    - name: source
      workspace: app-source

  - name: publish-image
    runAfter:
    - build-image
    taskRef:
      name: skopeo-copy
      kind: ClusterTask
    params:
    - name: srcImageURL
      value: docker://image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/caj-fare:$(tasks.generate-tag.results.image-tag)
    - name: destImageURL
      value: docker://$(params.IMAGE):$(tasks.generate-tag.results.image-tag)
    - name: srcTLSverify
      value: "false"
    - name: destTLSverify
      value: "false"
    workspaces:
    - name: images-url
      workspace: images-url
  
  - name: update-manifests
    taskRef:
      name: update-manifests
    workspaces:
    - name: manifest
      workspace: app-manifest
    params:
    - name: GIT_URL
      value: $(params.manifest-git-url)
    - name: GIT_REVISION
      value: $(params.manifest-git-revision)
    - name: APP_NAME
      value: $(params.APP_NAME)
    - name: DEPLOYMENT_PATH
      value: $(params.manifest-path)
    - name: IMAGE
      value: $(params.IMAGE):$(tasks.generate-tag.results.image-tag)
    runAfter:
    - publish-image