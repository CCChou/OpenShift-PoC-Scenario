apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  labels:
    app: discounts
    app.kubernetes.io/instance: shop
    app.kubernetes.io/managed-by: kustomzie
    app.kubernetes.io/name: discounts-umbrella
    app.kubernetes.io/version: 1.0.0
  name: discounts
  # namespace: gitops
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: discounts
      app.kubernetes.io/instance: shop
      app.kubernetes.io/name: discounts-umbrella
      version: none
  strategy:
    blueGreen:
      activeService: discounts-umbrella-online
      autoPromotionEnabled: false
      prePromotionAnalysis:
        templates:
          - templateName: discounts-analysis-template
      previewService: discounts-umbrella-offline
  template:
    metadata:
      annotations:
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: discounts
        app.kubernetes.io/instance: shop
        app.kubernetes.io/name: discounts-umbrella
        version: none
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: discounts-configmap-env
            - configMapRef:
                name: discounts-configmap-env-base
          image: "quay.io/dseveria/discounts:v1.0.1"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: quarkus-base
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext: {}
      securityContext: {}
      serviceAccountName: default
