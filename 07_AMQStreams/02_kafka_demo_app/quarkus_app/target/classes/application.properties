# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.generated-price.connector=smallrye-kafka
mp.messaging.outgoing.generated-price.topic=prices
mp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer
# Configure the Kafka source (we read from it)
mp.messaging.incoming.prices.connector=smallrye-kafka
mp.messaging.incoming.prices.topic=prices
mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
# Use with Red Hat OpenShift Streams for Apache Kafka 
# mp.messaging.outgoing.generated-price.security.protocol=SASL_SSL
# mp.messaging.outgoing.generated-price.sasl.mechanism=SCRAM-SHA-512
# mp.messaging.outgoing.generated-price.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="price-event-user" password="CoAj63DPxjrD";
# mp.messaging.incoming.prices.security.protocol=SASL_SSL
# mp.messaging.incoming.prices.sasl.mechanism=SCRAM-SHA-512
# mp.messaging.incoming.prices.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="price-event-user" password="CoAj63DPxjrD";
kafka.bootstrap.servers=my-cluster-kafka-bootstrap.kafka-demo.svc:9092
