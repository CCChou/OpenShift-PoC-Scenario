# dev env
%dev.quarkus.http.port=8081
%dev.kafka.bootstrap.servers=my-kafka-kafka-secure-bootstrap-kafka-demo.apps.cluster-rccb4.rccb4.sandbox213.opentlc.com:443
%dev.kafka.security.protocol=SASL_SSL
%dev.kafka.sasl.mechanism=SCRAM-SHA-512
%dev.kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="kafka-user1" password="CUFdnATSgXmYM5MtmaRKreciBCm1CmSt";
%dev.kafka.ssl.truststore.location=./target/truststore.jks
%dev.kafka.ssl.truststore.password=sXfpm8iC8ENG
%dev.kafka.ssl.truststore.type=PKCS12
%dev.kafka.ssl.endpoint.identification.algorithm=
# prod env
%prod.quarkus.http.port=8080
%prod.kafka.bootstrap.servers=${bootstrap_server}:443
%prod.kafka.security.protocol=${security_protocol}
%prod.kafka.sasl.mechanism=${sasl_mechanism}
%prod.kafka.sasl.jaas.config=${kafka_cluster_sasl_jaas_config}
%prod.kafka.ssl.truststore.location=/deployments/truststore/truststore.jks
%prod.kafka.ssl.truststore.password=${password}
kafka.ssl.truststore.type=PKCS12
kafka.ssl.endpoint.identification.algorithm=
# Go back to the first records, if it's out first access
kafka.auto.offset.reset=earliest
# Set the Kafka topic, as it's not the channel name
mp.messaging.incoming.requests.topic=quote-requests
# Configure the outgoing `quotes` Kafka topic
mp.messaging.outgoing.quotes.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
